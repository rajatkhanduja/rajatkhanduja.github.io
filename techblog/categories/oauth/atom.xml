<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OAuth | sudo random]]></title>
  <link href="http://rajatkhanduja.com/techblog/categories/oauth/atom.xml" rel="self"/>
  <link href="http://rajatkhanduja.com/"/>
  <updated>2014-06-24T22:36:08+05:30</updated>
  <id>http://rajatkhanduja.com/</id>
  <author>
    <name><![CDATA[Rajat Khanduja]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Evernote OAuth in C++]]></title>
    <link href="http://rajatkhanduja.com/techblog/2014/05/11/evernote-oauth-in-c-plus-plus/"/>
    <updated>2014-05-11T19:14:33+05:30</updated>
    <id>http://rajatkhanduja.com/techblog/2014/05/11/evernote-oauth-in-c-plus-plus</id>
    <content type="html"><![CDATA[<p>Due to the lack of an official <a href="https://evernote.com">Evernote</a> client for
Linux and dissatisfied with solutions like
<a href="https://github.com/nvbn/everpad">Neverpad</a> and <a href="http://sourceforge.net/projects/nevernote/">NixNote (formerly
Nevernote)</a>, I have started working
on <a href="https://github.com/rajatkhanduja/Evernote-for-linux">my own Linux client</a>.</p>

<p>It was while developing this that I learned that <a href="https://github.com/evernote/evernote-sdk-cpp">Evernote SDK for
C++</a> doesn’t really provide any
integration with OAuth. I couldn’t even find a well formed solution for the
same on the Internet, except some forum posts suggesting using any available
OAuth 1.0 client. Searching for OAuth clients for C++, I found
<a href="https://github.com/pipacs/o2">O2</a>.  Using this, I was able to create a simple
OAuth integration for Evernote. </p>

<p>Here are the steps :-</p>

<!--more-->

<ol>
  <li>Taking cue from <a href="https://github.com/pipacs/o2/blob/master/src/o1dropbox.h">O2 integration with Dropbox</a>, 
I extended O1 to create <code>EvernoteAuthenticator</code></li>
</ol>

<script src="https://gist.github.com/rajatkhanduja/edbb7f8d162912b38157.js?file=EvernoteAuthenticator.h"></script>

<ol>
  <li><code>EvernoteClient</code> demonstrates how <code>EvernoteAuthenticator</code> is initialized and called.
 Moreover, it handles the signals generated by <code>EvernoteAuthenticator</code> to open
 a browser, which is required for the user to enter his credentials to log in.
 It also allows the developer to use the sandboxed environment (more about that later).</li>
</ol>

<script src="https://gist.github.com/rajatkhanduja/edbb7f8d162912b38157.js?file=EvernoteClient.h"></script>

<script src="https://gist.github.com/rajatkhanduja/edbb7f8d162912b38157.js?file=EvernoteClient.cpp"></script>

]]></content>
  </entry>
  
</feed>
